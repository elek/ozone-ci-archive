<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190615 13:45:12.543" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:45:12.817" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:01.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:01.711" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190615 13:46:01.711" starttime="20190615 13:45:12.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:01.712" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 0.00% |?                                                                                                    |  0/125 Time: 0:00:05 0.00% |?                                                                                                    |  0/125 Time: 0:00:06WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 1.60% |??                                                                                                   |  2/125 Time: 0:00:07 8.80% |?????????                                                                                            |  11/125 Time: 0:00:08 16.00% |?????????????????                                                                                    |  20/125 Time: 0:00:09 22.40% |???????????????????????                                                                              |  28/125 Time: 0:00:10 28.80% |?????????????????????????????                                                                        |  36/125 Time: 0:00:11 40.00% |?????????????????????????????????????????                                                            |  50/125 Time: 0:00:12 45.60% |??????????????????????????????????????????????                                                       |  57/125 Time: 0:00:13 52.00% |?????????????????????????????????????????????????????                                                |  65/125 Time: 0:00:14 59.20% |????????????????????????????????????????????????????????????                                         |  74/125 Time: 0:00:15 64.80% |?????????????????????????????????????????????????????????????????                                    |  81/125 Time: 0:00:16 65.60% |??????????????????????????????????????????????????????????????????                                   |  82/125 Time: 0:00:17 66.40% |???????????????????????????????????????????????????????????????????                                  |  83/125 Time: 0:00:18 68.00% |?????????????????????????????????????????????????????????????????????                                |  85/125 Time: 0:00:19 73.60% |??????????????????????????????????????????????????????????????????????????                           |  92/125 Time: 0:00:20 77.60% |??????????????????????????????????????????????????????????????????????????????                       |  97/125 Time: 0:00:21 80.00% |?????????????????????????????????????????????????????????????????????????????????                    |  100/125 Time: 0:00:22 84.00% |?????????????????????????????????????????????????????????????????????????????????????                |  105/125 Time: 0:00:23 88.00% |?????????????????????????????????????????????????????????????????????????????????????????            |  110/125 Time: 0:00:24 93.60% |??????????????????????????????????????????????????????????????????????????????????????????????       |  117/125 Time: 0:00:25 94.40% |???????????????????????????????????????????????????????????????????????????????????????????????      |  118/125 Time: 0:00:26 95.20% |????????????????????????????????????????????????????????????????????????????????????????????????     |  119/125 Time: 0:00:27 95.20% |????????????????????????????????????????????????????????????????????????????????????????????????     |  119/125 Time: 0:00:29 96.00% |?????????????????????????????????????????????????????????????????????????????????????????????????    |  120/125 Time: 0:00:30 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:31

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,417
Average Time spent in bucket creation: 00:00:00,389
Average Time spent in key creation: 00:00:07,247
Average Time spent in key write: 00:00:21,992
Total bytes written: 1280000
Total Execution time: 00:00:39,192
***************************************************</msg>
<status status="PASS" endtime="20190615 13:46:01.713" starttime="20190615 13:46:01.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:01.713" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:01.713" starttime="20190615 13:46:01.713"></status>
</kw>
<msg timestamp="20190615 13:46:01.714" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190615 13:46:01.714" starttime="20190615 13:45:12.814"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:01.715" starttime="20190615 13:46:01.715"></status>
</kw>
<status status="PASS" endtime="20190615 13:46:01.715" starttime="20190615 13:46:01.714"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:01.716" starttime="20190615 13:46:01.715"></status>
</kw>
<status status="PASS" endtime="20190615 13:46:01.716" critical="yes" starttime="20190615 13:45:12.805"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190615 13:46:01.719" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190615 13:46:01.719" starttime="20190615 13:46:01.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:01.721" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:01.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:01.751" level="INFO">${output} = om-audit-d2cc07643f8e.log</msg>
<status status="PASS" endtime="20190615 13:46:01.751" starttime="20190615 13:46:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:01.753" level="INFO">om-audit-d2cc07643f8e.log</msg>
<status status="PASS" endtime="20190615 13:46:01.753" starttime="20190615 13:46:01.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:01.814" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:01.815" starttime="20190615 13:46:01.753"></status>
</kw>
<msg timestamp="20190615 13:46:01.822" level="INFO">${logfile} = om-audit-d2cc07643f8e.log</msg>
<status status="PASS" endtime="20190615 13:46:01.822" starttime="20190615 13:46:01.719"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:01.825" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-d2cc07643f8e.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:07.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:07.746" level="INFO">${output} = /var/log/hadoop/om-audit-d2cc07643f8e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190615 13:46:07.746" starttime="20190615 13:46:01.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:07.747" level="INFO">/var/log/hadoop/om-audit-d2cc07643f8e.log has been loaded successfully</msg>
<status status="PASS" endtime="20190615 13:46:07.747" starttime="20190615 13:46:07.747"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:07.748" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:07.748" starttime="20190615 13:46:07.747"></status>
</kw>
<status status="PASS" endtime="20190615 13:46:07.748" starttime="20190615 13:46:01.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:07.750" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:10.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:10.835" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190615 13:46:10.835" starttime="20190615 13:46:07.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:10.837" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190615 13:46:10.838" starttime="20190615 13:46:10.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:10.838" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:10.838" starttime="20190615 13:46:10.838"></status>
</kw>
<msg timestamp="20190615 13:46:10.839" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190615 13:46:10.839" starttime="20190615 13:46:07.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:10.839" starttime="20190615 13:46:10.839"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:10.841" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:12.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:12.587" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190615 13:46:12.587" starttime="20190615 13:46:10.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:12.588" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190615 13:46:12.588" starttime="20190615 13:46:12.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:12.589" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:12.589" starttime="20190615 13:46:12.588"></status>
</kw>
<msg timestamp="20190615 13:46:12.589" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190615 13:46:12.589" starttime="20190615 13:46:10.840"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:12.590" starttime="20190615 13:46:12.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:12.591" starttime="20190615 13:46:12.590"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:12.593" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:14.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:14.220" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190615 13:46:14.220" starttime="20190615 13:46:12.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:14.221" level="INFO">5	
</msg>
<status status="PASS" endtime="20190615 13:46:14.221" starttime="20190615 13:46:14.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:14.222" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:14.222" starttime="20190615 13:46:14.221"></status>
</kw>
<msg timestamp="20190615 13:46:14.222" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190615 13:46:14.222" starttime="20190615 13:46:12.591"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190615 13:46:14.223" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190615 13:46:14.223" starttime="20190615 13:46:14.222"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:14.224" starttime="20190615 13:46:14.223"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190615 13:46:14.226" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190615 13:46:17.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20190615 13:46:17.994" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190615 13:46:17.994" starttime="20190615 13:46:14.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190615 13:46:17.996" level="INFO">25	
</msg>
<status status="PASS" endtime="20190615 13:46:17.996" starttime="20190615 13:46:17.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190615 13:46:17.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190615 13:46:17.997" starttime="20190615 13:46:17.996"></status>
</kw>
<msg timestamp="20190615 13:46:17.997" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190615 13:46:17.997" starttime="20190615 13:46:14.224"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190615 13:46:17.998" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190615 13:46:17.998" starttime="20190615 13:46:17.997"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190615 13:46:17.998" starttime="20190615 13:46:17.998"></status>
</kw>
<status status="PASS" endtime="20190615 13:46:17.999" critical="yes" starttime="20190615 13:46:01.716"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190615 13:46:18.001" starttime="20190615 13:45:12.589"></status>
</suite>
<status status="PASS" endtime="20190615 13:46:18.006" starttime="20190615 13:45:12.545"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="auditparser" pass="2">auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
