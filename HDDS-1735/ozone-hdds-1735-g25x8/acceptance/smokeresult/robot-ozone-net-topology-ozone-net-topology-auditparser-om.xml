<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190704 02:29:02.999" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="ozone-net-topology-auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:03.052" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:15.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:15.774" level="INFO">${output} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190704 02:29:15.774" starttime="20190704 02:29:03.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:15.776" level="INFO">
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 12.80% |?????????????                                                                                        |  16/125 Time: 0:00:03 32.80% |?????????????????????????????????                                                                    |  41/125 Time: 0:00:04 60.00% |?????????????????????????????????????????????????????????????                                        |  75/125 Time: 0:00:05 86.40% |???????????????????????????????????????????????????????????????????????????????????????              |  108/125 Time: 0:00:06 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:07

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,122
Average Time spent in bucket creation: 00:00:00,213
Average Time spent in key creation: 00:00:01,195
Average Time spent in key write: 00:00:04,796
Total bytes written: 1280000
Total Execution time: 00:00:11,464
***************************************************</msg>
<status status="PASS" endtime="20190704 02:29:15.776" starttime="20190704 02:29:15.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:15.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:15.777" starttime="20190704 02:29:15.776"></status>
</kw>
<msg timestamp="20190704 02:29:15.778" level="INFO">${result} = 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                         ...</msg>
<status status="PASS" endtime="20190704 02:29:15.778" starttime="20190704 02:29:03.050"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:15.780" starttime="20190704 02:29:15.779"></status>
</kw>
<status status="PASS" endtime="20190704 02:29:15.780" starttime="20190704 02:29:15.778"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:15.781" starttime="20190704 02:29:15.781"></status>
</kw>
<status status="PASS" endtime="20190704 02:29:15.782" critical="yes" starttime="20190704 02:29:03.050"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190704 02:29:15.787" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190704 02:29:15.787" starttime="20190704 02:29:15.786"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:15.790" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:15.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:15.799" level="INFO">${output} = om-audit-f59d4d8c427a.log</msg>
<status status="PASS" endtime="20190704 02:29:15.799" starttime="20190704 02:29:15.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:15.801" level="INFO">om-audit-f59d4d8c427a.log</msg>
<status status="PASS" endtime="20190704 02:29:15.801" starttime="20190704 02:29:15.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:15.802" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:15.802" starttime="20190704 02:29:15.802"></status>
</kw>
<msg timestamp="20190704 02:29:15.803" level="INFO">${logfile} = om-audit-f59d4d8c427a.log</msg>
<status status="PASS" endtime="20190704 02:29:15.803" starttime="20190704 02:29:15.787"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:15.807" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-f59d4d8c427a.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:29.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:29.880" level="INFO">${output} = /var/log/hadoop/om-audit-f59d4d8c427a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190704 02:29:29.880" starttime="20190704 02:29:15.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:29.881" level="INFO">/var/log/hadoop/om-audit-f59d4d8c427a.log has been loaded successfully</msg>
<status status="PASS" endtime="20190704 02:29:29.881" starttime="20190704 02:29:29.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:29.882" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:29.882" starttime="20190704 02:29:29.882"></status>
</kw>
<status status="PASS" endtime="20190704 02:29:29.882" starttime="20190704 02:29:15.803"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:29.885" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:30.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:30.656" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190704 02:29:30.656" starttime="20190704 02:29:29.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:30.658" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190704 02:29:30.658" starttime="20190704 02:29:30.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:30.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:30.659" starttime="20190704 02:29:30.658"></status>
</kw>
<msg timestamp="20190704 02:29:30.659" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190704 02:29:30.659" starttime="20190704 02:29:29.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:30.660" starttime="20190704 02:29:30.659"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:30.662" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:31.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:31.499" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190704 02:29:31.500" starttime="20190704 02:29:30.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:31.501" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190704 02:29:31.501" starttime="20190704 02:29:31.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:31.502" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:31.503" starttime="20190704 02:29:31.502"></status>
</kw>
<msg timestamp="20190704 02:29:31.503" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190704 02:29:31.503" starttime="20190704 02:29:30.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:31.504" starttime="20190704 02:29:31.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:31.505" starttime="20190704 02:29:31.505"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:31.509" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:32.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:32.265" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190704 02:29:32.265" starttime="20190704 02:29:31.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:32.266" level="INFO">5	
</msg>
<status status="PASS" endtime="20190704 02:29:32.267" starttime="20190704 02:29:32.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:32.267" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:32.268" starttime="20190704 02:29:32.267"></status>
</kw>
<msg timestamp="20190704 02:29:32.268" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190704 02:29:32.268" starttime="20190704 02:29:31.506"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190704 02:29:32.270" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190704 02:29:32.270" starttime="20190704 02:29:32.269"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:32.271" starttime="20190704 02:29:32.270"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190704 02:29:32.274" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190704 02:29:33.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20190704 02:29:33.050" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190704 02:29:33.050" starttime="20190704 02:29:32.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190704 02:29:33.051" level="INFO">25	
</msg>
<status status="PASS" endtime="20190704 02:29:33.051" starttime="20190704 02:29:33.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190704 02:29:33.052" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190704 02:29:33.052" starttime="20190704 02:29:33.052"></status>
</kw>
<msg timestamp="20190704 02:29:33.052" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190704 02:29:33.052" starttime="20190704 02:29:32.271"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190704 02:29:33.053" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190704 02:29:33.053" starttime="20190704 02:29:33.053"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190704 02:29:33.054" starttime="20190704 02:29:33.053"></status>
</kw>
<status status="PASS" endtime="20190704 02:29:33.054" critical="yes" starttime="20190704 02:29:15.782"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190704 02:29:33.055" starttime="20190704 02:29:03.025"></status>
</suite>
<status status="PASS" endtime="20190704 02:29:33.057" starttime="20190704 02:29:03.000"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-net-topology-auditparser" pass="2">ozone-net-topology-auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">ozone-net-topology-auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
