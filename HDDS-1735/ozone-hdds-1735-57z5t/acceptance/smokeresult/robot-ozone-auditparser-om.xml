<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20190703 20:50:47.633" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/auditparser" id="s1" name="auditparser">
<suite source="/opt/hadoop/smoketest/auditparser/auditparser.robot" id="s1-s1" name="Auditparser">
<test id="s1-s1-t1" name="Initiating freon to generate data">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:50:47.685" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:50:56.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:50:56.426" level="INFO">${output} = 2019-07-03 20:50:50 INFO  RandomKeyGenerator:261 - Number of Threads: 1
2019-07-03 20:50:50 INFO  RandomKeyGenerator:267 - Number of Volumes: 5.
2019-07-03 20:50:50 INFO  RandomKeyGenerator:268 - Numb...</msg>
<status status="PASS" endtime="20190703 20:50:56.426" starttime="20190703 20:50:47.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:50:56.427" level="INFO">2019-07-03 20:50:50 INFO  RandomKeyGenerator:261 - Number of Threads: 1
2019-07-03 20:50:50 INFO  RandomKeyGenerator:267 - Number of Volumes: 5.
2019-07-03 20:50:50 INFO  RandomKeyGenerator:268 - Number of Buckets per Volume: 5.
2019-07-03 20:50:50 INFO  RandomKeyGenerator:269 - Number of Keys per Bucket: 5.
2019-07-03 20:50:50 INFO  RandomKeyGenerator:270 - Key size: 10240 bytes
2019-07-03 20:50:50 INFO  RandomKeyGenerator:271 - Buffer size: 4096 bytes
2019-07-03 20:50:50 INFO  RandomKeyGenerator:300 - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-07-03 20:50:50 INFO  RpcClient:289 - Creating Volume: vol-0-57838, with hadoop as owner.
2019-07-03 20:50:50 INFO  RpcClient:426 - Creating Bucket: vol-0-57838/bucket-0-48091, with Versioning false and Storage Type set to DISK and Encryption set to false 
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 0.80% |?                                                                                                    |  1/125 Time: 0:00:022019-07-03 20:50:52 INFO  RpcClient:426 - Creating Bucket: vol-0-57838/bucket-1-69912, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:52 INFO  RpcClient:426 - Creating Bucket: vol-0-57838/bucket-2-25322, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:52 INFO  RpcClient:426 - Creating Bucket: vol-0-57838/bucket-3-04263, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:52 INFO  RpcClient:426 - Creating Bucket: vol-0-57838/bucket-4-17692, with Versioning false and Storage Type set to DISK and Encryption set to false 
 16.80% |?????????????????                                                                                    |  21/125 Time: 0:00:032019-07-03 20:50:53 INFO  RpcClient:289 - Creating Volume: vol-1-40588, with hadoop as owner.
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-1-40588/bucket-0-48114, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-1-40588/bucket-1-87312, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-1-40588/bucket-2-77236, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-1-40588/bucket-3-87526, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-1-40588/bucket-4-99201, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:53 INFO  RpcClient:289 - Creating Volume: vol-2-05955, with hadoop as owner.
2019-07-03 20:50:53 INFO  RpcClient:426 - Creating Bucket: vol-2-05955/bucket-0-23044, with Versioning false and Storage Type set to DISK and Encryption set to false 
 42.40% |???????????????????????????????????????????                                                          |  53/125 Time: 0:00:042019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-2-05955/bucket-1-82370, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-2-05955/bucket-2-57327, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-2-05955/bucket-3-47488, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-2-05955/bucket-4-64831, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:289 - Creating Volume: vol-3-92682, with hadoop as owner.
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-3-92682/bucket-0-46132, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-3-92682/bucket-1-76181, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:54 INFO  RpcClient:426 - Creating Bucket: vol-3-92682/bucket-2-53575, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-3-92682/bucket-3-12819, with Versioning false and Storage Type set to DISK and Encryption set to false 
 72.00% |?????????????????????????????????????????????????????????????????????????                            |  90/125 Time: 0:00:052019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-3-92682/bucket-4-21890, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:289 - Creating Volume: vol-4-98880, with hadoop as owner.
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-4-98880/bucket-0-11868, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-4-98880/bucket-1-04404, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-4-98880/bucket-2-01049, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-4-98880/bucket-3-17953, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-07-03 20:50:55 INFO  RpcClient:426 - Creating Bucket: vol-4-98880/bucket-4-60266, with Versioning false and Storage Type set to DISK and Encryption set to false 
 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:06

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,120
Average Time spent in bucket creation: 00:00:00,107
Average Time spent in key creation: 00:00:01,092
Average Time spent in key write: 00:00:04,445
Total bytes written: 1280000
Total Execution time: 00:00:07,448
***************************************************</msg>
<status status="PASS" endtime="20190703 20:50:56.428" starttime="20190703 20:50:56.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:50:56.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:50:56.429" starttime="20190703 20:50:56.428"></status>
</kw>
<msg timestamp="20190703 20:50:56.429" level="INFO">${result} = 2019-07-03 20:50:50 INFO  RandomKeyGenerator:261 - Number of Threads: 1
2019-07-03 20:50:50 INFO  RandomKeyGenerator:267 - Number of Volumes: 5.
2019-07-03 20:50:50 INFO  RandomKeyGenerator:268 - Numb...</msg>
<status status="PASS" endtime="20190703 20:50:56.430" starttime="20190703 20:50:47.683"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20190703 20:50:56.432" starttime="20190703 20:50:56.431"></status>
</kw>
<status status="PASS" endtime="20190703 20:50:56.432" starttime="20190703 20:50:56.430"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20190703 20:50:56.432" starttime="20190703 20:50:56.432"></status>
</kw>
<status status="PASS" endtime="20190703 20:50:56.433" critical="yes" starttime="20190703 20:50:47.683"></status>
</test>
<test id="s1-s1-t2" name="Testing audit parser">
<kw name="Get Environment Variable" library="OperatingSystem">
<doc>Returns the value of an environment variable with the given name.</doc>
<arguments>
<arg>HADOOP_LOG_DIR</arg>
<arg>/var/log/hadoop</arg>
</arguments>
<assign>
<var>${logdir}</var>
</assign>
<msg timestamp="20190703 20:50:56.437" level="INFO">${logdir} = /var/log/hadoop</msg>
<status status="PASS" endtime="20190703 20:50:56.438" starttime="20190703 20:50:56.437"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -t "${logdir}" | grep om-audit | head -1</arg>
</arguments>
<assign>
<var>${logfile}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:50:56.441" level="INFO">Running command 'ls -t "/var/log/hadoop" | grep om-audit | head -1 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:50:56.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:50:56.450" level="INFO">${output} = om-audit-8d5a97db8a91.log</msg>
<status status="PASS" endtime="20190703 20:50:56.450" starttime="20190703 20:50:56.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:50:56.451" level="INFO">om-audit-8d5a97db8a91.log</msg>
<status status="PASS" endtime="20190703 20:50:56.452" starttime="20190703 20:50:56.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:50:56.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:50:56.452" starttime="20190703 20:50:56.452"></status>
</kw>
<msg timestamp="20190703 20:50:56.453" level="INFO">${logfile} = om-audit-8d5a97db8a91.log</msg>
<status status="PASS" endtime="20190703 20:50:56.453" starttime="20190703 20:50:56.438"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" load "${logdir}/${logfile}"</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:50:56.456" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" load "/var/log/hadoop/om-audit-8d5a97db8a91.log" 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:51:05.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:51:05.325" level="INFO">${output} = /var/log/hadoop/om-audit-8d5a97db8a91.log has been loaded successfully</msg>
<status status="PASS" endtime="20190703 20:51:05.325" starttime="20190703 20:50:56.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:51:05.327" level="INFO">/var/log/hadoop/om-audit-8d5a97db8a91.log has been loaded successfully</msg>
<status status="PASS" endtime="20190703 20:51:05.327" starttime="20190703 20:51:05.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:51:05.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:51:05.329" starttime="20190703 20:51:05.328"></status>
</kw>
<status status="PASS" endtime="20190703 20:51:05.329" starttime="20190703 20:50:56.453"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5cmds</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:51:05.333" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5cmds 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:51:06.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:51:06.248" level="INFO">${output} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190703 20:51:06.248" starttime="20190703 20:51:05.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:51:06.250" level="INFO">ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190703 20:51:06.250" starttime="20190703 20:51:06.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:51:06.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:51:06.251" starttime="20190703 20:51:06.250"></status>
</kw>
<msg timestamp="20190703 20:51:06.252" level="INFO">${result} = ALLOCATE_KEY	125	
COMMIT_KEY	125	
CREATE_BUCKET	25	
CREATE_VOLUME	5	
</msg>
<status status="PASS" endtime="20190703 20:51:06.252" starttime="20190703 20:51:05.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ALLOCATE_KEY</arg>
</arguments>
<status status="PASS" endtime="20190703 20:51:06.252" starttime="20190703 20:51:06.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" template top5users</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:51:06.256" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" template top5users 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:51:07.122" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:51:07.122" level="INFO">${output} = hadoop	280	
</msg>
<status status="PASS" endtime="20190703 20:51:07.122" starttime="20190703 20:51:06.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:51:07.124" level="INFO">hadoop	280	
</msg>
<status status="PASS" endtime="20190703 20:51:07.124" starttime="20190703 20:51:07.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:51:07.125" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:51:07.125" starttime="20190703 20:51:07.124"></status>
</kw>
<msg timestamp="20190703 20:51:07.126" level="INFO">${result} = hadoop	280	
</msg>
<status status="PASS" endtime="20190703 20:51:07.126" starttime="20190703 20:51:06.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Set username</arg>
</arguments>
<status status="PASS" endtime="20190703 20:51:07.127" starttime="20190703 20:51:07.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${user}</arg>
</arguments>
<status status="PASS" endtime="20190703 20:51:07.128" starttime="20190703 20:51:07.127"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:51:07.131" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_VOLUME' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:51:08.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:51:08.012" level="INFO">${output} = 5	
</msg>
<status status="PASS" endtime="20190703 20:51:08.012" starttime="20190703 20:51:07.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:51:08.013" level="INFO">5	
</msg>
<status status="PASS" endtime="20190703 20:51:08.013" starttime="20190703 20:51:08.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:51:08.014" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:51:08.014" starttime="20190703 20:51:08.013"></status>
</kw>
<msg timestamp="20190703 20:51:08.014" level="INFO">${result} = 5	
</msg>
<status status="PASS" endtime="20190703 20:51:08.014" starttime="20190703 20:51:07.128"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190703 20:51:08.015" level="INFO">${result} = 5.0</msg>
<status status="PASS" endtime="20190703 20:51:08.015" starttime="20190703 20:51:08.014"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190703 20:51:08.016" starttime="20190703 20:51:08.016"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone auditparser "${auditworkdir}/audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20190703 20:51:08.019" level="INFO">Running command 'ozone auditparser "/tmp//audit.db" query "select count(*) from audit where op='CREATE_BUCKET' and RESULT='SUCCESS'" 2&gt;&amp;1'.</msg>
<msg timestamp="20190703 20:51:08.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20190703 20:51:08.815" level="INFO">${output} = 25	
</msg>
<status status="PASS" endtime="20190703 20:51:08.815" starttime="20190703 20:51:08.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20190703 20:51:08.817" level="INFO">25	
</msg>
<status status="PASS" endtime="20190703 20:51:08.817" starttime="20190703 20:51:08.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20190703 20:51:08.818" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20190703 20:51:08.818" starttime="20190703 20:51:08.817"></status>
</kw>
<msg timestamp="20190703 20:51:08.819" level="INFO">${result} = 25	
</msg>
<status status="PASS" endtime="20190703 20:51:08.819" starttime="20190703 20:51:08.016"></status>
</kw>
<kw name="Convert To Number" library="BuiltIn">
<doc>Converts the given item to a floating point number.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20190703 20:51:08.820" level="INFO">${result} = 25.0</msg>
<status status="PASS" endtime="20190703 20:51:08.820" starttime="20190703 20:51:08.819"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}&gt;${count}</arg>
</arguments>
<status status="PASS" endtime="20190703 20:51:08.821" starttime="20190703 20:51:08.820"></status>
</kw>
<status status="PASS" endtime="20190703 20:51:08.821" critical="yes" starttime="20190703 20:50:56.433"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20190703 20:51:08.823" starttime="20190703 20:50:47.659"></status>
</suite>
<status status="PASS" endtime="20190703 20:51:08.826" starttime="20190703 20:50:47.634"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="auditparser" pass="2">auditparser</stat>
<stat fail="0" id="s1-s1" name="Auditparser" pass="2">auditparser.Auditparser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
